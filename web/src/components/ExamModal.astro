---
// Propiedades simuladas del examen para mostrar datos ilustrativos
const examData = {
  estudiante: {
    dni: "12345678",
    nombre: "María González",
    carrera: "Licenciatura en Administración"
  },
  examen: {
    materia: "SISTEMAS ADMINISTRATIVOS CONTABLES",
    codigo: "2120",
    fecha: "5 de Junio, 2025",
    hora: "14:00",
    tipo: "Escrito en sede",
    turno: "1° Turno Ordinario"
  },
  ubicacion: {
    sector: "Economía y Administración",
    aula: "Aula 203 - Edificio Principal",
    direccion: "Campus UCASAL - Castañares 751"
  },
  profesor: {
    nombre: "JOSE ALEJANDRO LAMAS",
    catedra: "A",
    email: "j.lamas@ucasal.edu.ar"
  },
  instrucciones: {
    materialPermitido: "Calculadora, hojas en blanco proporcionadas por la universidad",
    observaciones: "Presentarse 15 minutos antes del horario del examen. Traer documento de identidad.",
    monitoreo: "PROCTORING",
    responsable: "ANDREA TEJERINA"
  }
}
---

<!-- Modal de exámenes mejorado -->
<div id="examModal" class="fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center p-4 opacity-0 pointer-events-none transition-all duration-300" style="z-index: 9999;">
  <div class="bg-white rounded-3xl max-w-3xl w-full shadow-2xl transform scale-95 transition-all duration-300 max-h-[90vh] overflow-y-auto">
    
    <!-- Header con información del estudiante -->
    <div class="bg-gradient-to-r from-blue-900 to-red-600 text-white p-6 rounded-t-3xl">
      <div class="flex items-center justify-between">
        <div class="flex-1">
          <div class="mb-3">
            <h2 id="studentName" class="text-2xl font-bold">-</h2>
            <p id="studentDni" class="text-blue-100 text-lg">DNI: -</p>
          </div>
          <div class="bg-white/10 rounded-lg px-3 py-2 inline-block">
            <p id="studentCareer" class="text-sm font-medium">-</p>
          </div>
        </div>
        <button id="closeModal" class="text-white/80 hover:text-white transition-colors p-3 hover:bg-white/10 rounded-xl ml-4">
          <svg class="w-7 h-7" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2.5" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Lista de exámenes optimizada para escaneo rápido -->
    <div class="p-6" id="examsList">
      <!-- Los exámenes se insertan dinámicamente aquí -->
    </div>

    <!-- Footer con botón de cerrar -->
    <div class="p-6 border-t border-gray-100 bg-gray-50 rounded-b-3xl">
      <button id="closeModalBtn" class="w-full py-4 bg-gradient-to-r from-gray-600 to-gray-700 hover:from-gray-700 hover:to-gray-800 text-white rounded-xl font-semibold transition-all duration-200 text-lg shadow-lg hover:shadow-xl transform hover:scale-[1.02]">
        Cerrar
      </button>
    </div>
  </div>
</div>

<style>
  #examModal {
    z-index: 9999 !important;
  }
  
  .modal-open {
    opacity: 1 !important;
    pointer-events: auto !important;
    display: flex !important;
  }
  
  .modal-open > div {
    transform: scale(1) !important;
  }
  
  /* Animaciones suaves */
  .exam-card {
    transition: all 0.2s ease;
  }
  
  .exam-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.1);
  }
  
  /* Gradientes personalizados */
  .subject-badge {
    background: linear-gradient(135deg, #1e40af, #3b82f6);
    box-shadow: 0 4px 15px rgba(30, 64, 175, 0.3);
  }
  
  /* Responsive */
  @media (max-width: 640px) {
    .grid-cols-2 {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
    // Variables globales para los modales
    let currentExamData: any = null;

    // Funciones del modal
    function openExamModal() {
        console.log('Abriendo modal con datos:', currentExamData);
        const modal = document.getElementById('examModal');
        if (modal && currentExamData) {
            populateModal(currentExamData);
            modal.classList.add('modal-open');
            
            // Bloquear scroll cuando el modal esté abierto
            document.body.style.overflow = 'hidden';
        } else {
            console.error('Modal element o datos no encontrados!');
        }
    }
    
    function closeModal() {
        const modal = document.getElementById('examModal');
        modal?.classList.remove('modal-open');
        
        // Desbloquear scroll
        document.body.style.overflow = 'auto';
        
        // Resetear: volver a la primera sección (video)
        setTimeout(() => {
            const videoSection = document.getElementById('videoSection');
            if (videoSection) {
                videoSection.scrollIntoView({ 
                    behavior: 'smooth', 
                    block: 'start' 
                });
            }
        }, 300);
    }
    
    // Función para formatear hora sin segundos
    function formatearHora(hora: string): string {
        if (!hora) return 'Hora no especificada';
        
        // Si viene en formato HH:MM:SS, extraer solo HH:MM
        if (hora.includes(':')) {
            const partes = hora.split(':');
            if (partes.length >= 2) {
                return `${partes[0]}:${partes[1]}`;
            }
        }
        
        return hora;
    }
    
    // Función para formatear carrera y facultad
    function formatearCarreraFacultad(carrera: string, facultad: string): string {
        if (!facultad && !carrera) return 'Carrera no especificada';
        if (!facultad) return carrera;
        if (!carrera) return facultad;
        
        // Formato: "Facultad de X - Carrera"
        let facultadFormateada = facultad;
        if (!facultad.toLowerCase().includes('facultad')) {
            facultadFormateada = `Facultad de ${facultad}`;
        }
        
        return `${facultadFormateada} - ${carrera}`;
    }
    
    // Poblar el modal con datos optimizado para UX
    function populateModal(data: any) {
        console.log('Poblando modal con:', data);
        
        // Actualizar información del estudiante en el header
        const studentName = document.getElementById('studentName');
        const studentDni = document.getElementById('studentDni');
        const studentCareer = document.getElementById('studentCareer');
        
        if (studentName) studentName.textContent = data.estudiante?.nombre || 'Nombre no disponible';
        if (studentDni) studentDni.textContent = `DNI: ${data.dni || 'No disponible'}`;
        
        // Formatear carrera con facultad
        if (studentCareer) {
            const carreraFormateada = formatearCarreraFacultad(
                data.estudiante?.carrera || '',
                data.examenes?.[0]?.facultad || ''
            );
            studentCareer.textContent = carreraFormateada;
        }
        
        // Generar lista de exámenes con diseño optimizado
        const examsList = document.getElementById('examsList');
        
        if (examsList && data.examenes) {
            examsList.innerHTML = data.examenes.map((exam: any, index: number) => `
                <div class="exam-card bg-white border-2 border-gray-100 rounded-2xl p-6 mb-6 shadow-lg ${index > 0 ? 'mt-6' : ''}">
                    
                    <!-- 1. MATERIA - Elemento más prominente -->
                    <div class="text-center mb-6">
                        <div class="subject-badge inline-block px-6 py-3 rounded-xl text-white shadow-md">
                            <h3 class="text-2xl font-bold leading-tight">${exam.materia || 'Materia no especificada'}</h3>
                        </div>
                    </div>
                    
                    <!-- 2. AULA Y HORA - Segunda prioridad en grid -->
                    <div class="grid grid-cols-2 gap-4 mb-6">
                        <!-- AULA -->
                        <div class="bg-green-50 border border-green-200 p-4 rounded-xl text-center">
                            <div class="flex items-center justify-center mb-2">
                                <svg class="w-5 h-5 text-green-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                                </svg>
                                <span class="text-sm font-semibold text-green-700 uppercase tracking-wide">AULA</span>
                            </div>
                            <p class="text-xl font-bold text-gray-800">${exam.aula || 'Sin asignar'}</p>
                        </div>
                        
                        <!-- HORA -->
                        <div class="bg-red-50 border border-red-200 p-4 rounded-xl text-center">
                            <div class="flex items-center justify-center mb-2">
                                <svg class="w-5 h-5 text-red-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                <span class="text-sm font-semibold text-red-700 uppercase tracking-wide">HORA</span>
                            </div>
                            <p class="text-xl font-bold text-gray-800">${formatearHora(exam.hora)}</p>
                        </div>
                    </div>
                    
                    <!-- 3. INFORMACIÓN SECUNDARIA en grid de 2 columnas -->
                    <div class="grid grid-cols-2 gap-4 mb-4">
                        <!-- FECHA -->
                        <div class="bg-blue-50 border border-blue-200 p-4 rounded-xl text-center">
                            <div class="flex items-center justify-center mb-2">
                                <svg class="w-5 h-5 text-blue-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                </svg>
                                <span class="text-sm font-semibold text-blue-700 uppercase tracking-wide">FECHA</span>
                            </div>
                            <p class="text-lg font-bold text-gray-800">${exam.fecha || 'Fecha no especificada'}</p>
                        </div>
                        
                        <!-- CÁTEDRA/PROFESOR -->
                        <div class="bg-purple-50 border border-purple-200 p-4 rounded-xl text-center">
                            <div class="flex items-center justify-center mb-2">
                                <svg class="w-5 h-5 text-purple-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                </svg>
                                <span class="text-sm font-semibold text-purple-700 uppercase tracking-wide">CÁTEDRA</span>
                            </div>
                            <p class="text-lg font-bold text-gray-800">${exam.profesor || 'No especificado'}</p>
                        </div>
                    </div>
                    
                    <!-- 4. TIPO DE EXAMEN - Información adicional -->
                    <div class="text-center">
                        <div class="bg-orange-50 border border-orange-200 p-4 rounded-xl inline-block">
                            <div class="flex items-center justify-center mb-2">
                                <svg class="w-5 h-5 text-orange-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                </svg>
                                <span class="text-sm font-semibold text-orange-700 uppercase tracking-wide">TIPO DE EXAMEN</span>
                            </div>
                            <p class="text-lg font-bold text-gray-800">${exam.tipo || 'No especificado'}</p>
                        </div>
                    </div>
                </div>
            `).join('');
        }
    }

    // Event listeners cuando el DOM esté listo
    document.addEventListener('DOMContentLoaded', function() {
        const closeModalBtn = document.getElementById('closeModal');
        const closeModalFooter = document.getElementById('closeModalBtn');
        const modal = document.getElementById('examModal');

        // Event listeners para el modal principal
        closeModalBtn?.addEventListener('click', closeModal);
        closeModalFooter?.addEventListener('click', closeModal);
        
        // Cerrar modal al hacer click en el fondo
        modal?.addEventListener('click', function(e) {
            if (e.target === modal) {
                closeModal();
            }
        });
        
        // Cerrar modal con tecla Escape
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeModal();
            }
        });
    });

    // Exportar funciones para que puedan ser usadas desde otras secciones
    (window as any).ExamModal = {
        openExamModal,
        closeModal,
        setCurrentExamData: (data: any) => { currentExamData = data; }
    };
</script> 