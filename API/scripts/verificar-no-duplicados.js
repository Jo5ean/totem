import prisma from '../src/lib/db.js';

async function verificarNoDuplicados() {
  try {
    console.log('üîç VERIFICACI√ìN POST-SINCRONIZACI√ìN\n');
    
    // 1. Contar ex√°menes totales
    const totalExamenes = await prisma.examen.count();
    console.log(`üìä Total ex√°menes actuales: ${totalExamenes}`);
    
    // 2. Contar ExamenesTotem
    const totalExamenesTotem = await prisma.examenTotem.count();
    console.log(`üìã Total ExamenesTotem: ${totalExamenesTotem}`);
    
    // 3. Verificar si hay duplicados usando la clave √∫nica
    const duplicados = await prisma.$queryRaw`
      SELECT 
        et.sector_totem, 
        et.carrera_totem, 
        et.materia_totem,
        DATE(e.fecha) as fecha_examen,
        COUNT(*) as cantidad
      FROM examenes_totem et
      JOIN examenes e ON et.examen_id = e.id
      GROUP BY et.sector_totem, et.carrera_totem, et.materia_totem, DATE(e.fecha)
      HAVING COUNT(*) > 1
      LIMIT 5
    `;
    
    console.log(`\nüîç Duplicados encontrados: ${duplicados.length}`);
    
    if (duplicados.length > 0) {
      console.log('‚ùå PROBLEMA: Se encontraron duplicados:');
      duplicados.forEach(dup => {
        console.log(`   ${dup.sector_totem}/${dup.carrera_totem}/${dup.materia_totem} ‚Üí ${dup.cantidad} veces`);
      });
    } else {
      console.log('‚úÖ √âXITO: No hay duplicados detectados');
    }
    
    // 4. Verificar fechas de creaci√≥n recientes
    const examenesRecientes = await prisma.examen.count({
      where: {
        createdAt: {
          gte: new Date(Date.now() - 10 * 60 * 1000) // √öltimos 10 minutos
        }
      }
    });
    
    console.log(`\n‚è∞ Ex√°menes creados en √∫ltimos 10 minutos: ${examenesRecientes}`);
    
    if (examenesRecientes === 0) {
      console.log('‚úÖ PERFECTO: No se crearon nuevos ex√°menes en la segunda sincronizaci√≥n');
    } else {
      console.log('‚ö†Ô∏è ATENCI√ìN: Se crearon ex√°menes nuevos recientemente');
    }
    
    console.log('\nüéØ CONCLUSI√ìN:');
    if (duplicados.length === 0 && examenesRecientes === 0) {
      console.log('‚úÖ Sistema de prevenci√≥n de duplicados funcionando PERFECTAMENTE');
      console.log('‚úÖ Listo para sincronizaci√≥n diaria autom√°tica');
    } else {
      console.log('‚ùå Revisar sistema de prevenci√≥n de duplicados');
    }
    
  } catch (error) {
    console.error('üí• Error:', error);
  } finally {
    await prisma.$disconnect();
  }
}

verificarNoDuplicados(); 