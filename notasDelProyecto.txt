API/
├── src/
│   ├── lib/db.js                    ✅ ESENCIAL
│   ├── controllers/                 ✅ USADO
│   ├── services/                    ✅ ACTIVO (excepto googleSheets)
│   ├── middleware/validation.js     ⚠️ PARCIALMENTE USADO
│   └── pages/api/                   ✅ ENDPOINTS ACTIVOS
├── prisma/schema.prisma             ✅ ESENCIAL
├── scripts/                         ✅ ÚTILES
├── docs/                            ✅ DOCUMENTACIÓN
└── csv_downloads/                   ⚠️ LIMPIAR PERIÓDICAMENTE

prompt para claude:
🎯 Objetivo de la Web
La Web debe funcionar como un carrusel vertical de slides. Cada usuario ingresará su DNI para consultar información personalizada sobre sus exámenes. Las slides deben presentar información útil y variada de forma visual y dinámica.

📦 Estructura esperada de las slides
Primera slide: debe ser configurable desde el backoffice. Muestra un video o imagen con un botón “Comenzar”.

Segunda slide: contiene botones de navegación generados dinámicamente en función de categorías. Cada botón debe estar asociado a una categoría.

Slides siguientes: deben armarse dinámicamente con posibilidad de diferentes configuraciones de grillas:

2 columnas x 2 filas

1 columna x 2 filas

2 columnas x 1 fila

...y otras variantes

Cada celda puede contener texto o imagen, seleccionable desde el backoffice.
Las slides estarán jerárquicamente organizadas como:

css
Copiar
Editar
Categoría → Slides (dinámicas)
🔗 Relación con el Backoffice
Todo el contenido de las slides debe gestionarse desde el backoffice. Las imágenes, los textos, los tipos de grilla, y el orden de aparición deben ser configurables.

🧠 Referencias visuales (extraídas del PDF cargado)
La idea visual se basa en el diseño del flyer de totem digital de UCASAL (ver archivo). Incluye:

Un campo para ingresar el DNI

Información de materias y aulas

Botones de navegación y FAQ

Mapas de ubicación

Bloques visuales y de texto organizados por categorías

Queremos que la web mantenga esa lógica modular y visualmente clara.

🧱 Ayuda que necesitamos
Por favor, ayúdanos a:

Proponer una estructura general de carpetas y archivos para la carpeta web.

Desarrollar una estructura base en React o Next.js (preferido) que contemple:

Carrusel vertical de slides

Composición dinámica basada en configuración JSON o API

Ingreso por DNI con lógica de consulta

Lógica para cargar slides por categoría

Componentes reutilizables para distintos tipos de celdas (imagen/texto)

Conexión con el backoffice (ejemplo de fetch a API REST)